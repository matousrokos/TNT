{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "peeringLocation": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the peering location and not the ARM resource location. It must exactly match one of the available peering locations from List ExpressRoute Service Providers API call."
      }
    },
    "eRsku_Tier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Chosen SKU Tier of ExpressRoute circuit. Choose from Premium or Standard SKU tiers."
      }
    },
    "eRsku_family": {
      "type": "string",
      "defaultValue": "MeteredData",
      "allowedValues": [
        "MeteredData",
        "UnlimitedData"
      ],
      "metadata": {
        "description": "Chosen SKU family of ExpressRoute circuit. Choose from MeteredData or UnlimitedData SKU families."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network to create."
      }
    },
    "vNETaddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address space in CIDR notation for the new virtual network."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address range in CIDR notation for the first subnet."
      }
    },
    "gatewaySubnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address range in CIDR notation for the Gateway subnet. For ExpressRoute enabled Gateways, this must be minimum of /28."
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "HighPerformance",
        "UltraPerformance"
      ],
      "metadata": {
        "description": "The Sku of the Gateway. This must be one of Basic, Standard or HighPerformance."
      }
    }
  },
  "variables": {
    "apiVersion": "2017-03-01",
    "serviceProviderName": "",
    "bandwidthInMbps": "",
    "gatewayType": "ExpressRoute",
    "connectionType": "ExpressRoute",
    "subnetName": "Servers",
    "gatewaySubnetName": "GatewaySubnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('gatewaySubnetName'))]",
    "routingWeight": 3,
    "eRNamingPrefix": "ER",
    "gatewayName": "[concat(variables('eRNamingPrefix'),'-GW')]",
    "gatewayPublicIPName": "[concat(variables('gatewayName'),'-IP')]",
    "connectionName": "[concat(variables('eRNamingPrefix'),'-Connection')]",
    "circuitName": "[concat(variables('eRNamingPrefix'),'-Circuit')]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNETaddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          },
          {
            "name": "[variables('gatewaySubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/expressRouteCircuits",
      "name": "[variables('circuitName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[concat(parameters('eRsku_Tier'),'_', parameters('eRsku_family'))]",
        "tier": "[parameters('eRsku_Tier')]",
        "family": "[parameters('eRsku_family')]"
      },
      "properties": {
        "serviceProviderProperties": {
          "serviceProviderName": "[variables('serviceProviderName')]",
          "peeringLocation": "[parameters('peeringLocation')]",
          "bandwidthInMbps": "[variables('bandwidthInMbps')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gatewayPublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('gatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPublicIPName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
          "gatewayType": "[variables('gatewayType')]"
        }
      },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/connections",
      "name": "[variables('connectionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('gatewayName'))]",
        "[concat('Microsoft.Network/expressRouteCircuits/', variables('circuitName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gatewayName'))]"
        },
        "peer": {
          "id": "[resourceId('Microsoft.Network/expressRouteCircuits',variables('circuitName'))]"
        },
        "connectionType": "[variables('connectionType')]",
        "routingWeight": "[variables('routingWeight')]"
      }
    }
  ]
}

