{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network to create."
      }
    },
    "vNETaddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address space in CIDR notation for the new virtual network."
      }
    },
    "serverSubnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address range in CIDR notation for the first subnet."
      }
    },
    "gatewaySubnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address range in CIDR notation for the Gateway subnet. For ExpressRoute enabled Gateways, this must be minimum of /28."
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "HighPerformance",
        "UltraPerformance"
      ],
      "metadata": {
        "description": "The Sku of the Gateway. This must be one of Standard, HighPerformance or UltraPerformance according to the bandwidth."
      }
    }
  },
  "variables": {
    "apiVersion": "2017-03-01",
    "serviceProviderName": "Equinix",
    "peeringLocation": "Amsterdam",
    "bandwidthInMbps": "1000",
    "eRsku_Tier": "Standard",
    "eRsku_family": "UnlimitedData",
    "gatewayType": "ExpressRoute",
    "connectionType": "ExpressRoute",
    "subnetName": "Servers",
    "gatewaySubnetName": "GatewaySubnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('gatewaySubnetName'))]",
    "routingWeight": 3,
    "eRNamingPrefix": "ER",
    "gatewayName": "[concat(variables('eRNamingPrefix'),'-GW')]",
    "gatewayPublicIPName": "[concat(variables('gatewayName'),'-IP')]",
    "connectionName": "[concat(variables('eRNamingPrefix'),'-Connection')]",
    "circuitName": "[concat(variables('eRNamingPrefix'),'-Circuit')]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNETaddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('serverSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('gatewaySubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/expressRouteCircuits",
      "name": "[variables('circuitName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[concat(variables('eRsku_Tier'),'_', variables('eRsku_family'))]",
        "tier": "[variables('eRsku_Tier')]",
        "family": "[variables('eRsku_family')]"
      },
      "properties": {
        "serviceProviderProperties": {
          "serviceProviderName": "[variables('serviceProviderName')]",
          "peeringLocation": "[variables('peeringLocation')]",
          "bandwidthInMbps": "[variables('bandwidthInMbps')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gatewayPublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('gatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPublicIPName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
          "gatewayType": "[variables('gatewayType')]"
        }
      },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/connections",
      "name": "[variables('connectionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('gatewayName'))]",
        "[concat('Microsoft.Network/expressRouteCircuits/', variables('circuitName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gatewayName'))]"
        },
        "peer": {
          "id": "[resourceId('Microsoft.Network/expressRouteCircuits',variables('circuitName'))]"
        },
        "connectionType": "[variables('connectionType')]",
        "routingWeight": "[variables('routingWeight')]"
      }
    }
  ]
}